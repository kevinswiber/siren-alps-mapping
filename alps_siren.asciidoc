ALPS Mapping Guidelines for Siren
=================================
:author: Kevin Swiber
:email: kswiber@gmail.com
:revdate: May 28, 2015

== Summary
[NOTE]
========
This is still a work in progress.  To file issues, please visit the GitHub
repository:  https://github.com/kevinswiber/siren-alps-mapping
========

This document provides guidance on mapping ALPS descriptions to Siren
representations.  It is provided as a guide for those writing servers that will
use ALPS profiles to generate Siren and for those writing client applications
that will use ALPS profiles to "recognize" ALPS descriptors within the Siren
representation.

== A Review of ALPS Principles
The Application-Level Profile Semantic (ALPS)<<0,[0]>> specification is designed
to describe the data elements and state transitions that make up a 'problem
domain' (e.g. microblogging, accounting, etc.). ALPS documents are designed to
be useful to both client and server implementors and can be used at both
run-time and design-time to handle the generation and interpretation of
response representations. ALPS description documents are referred to as
'profiles' or 'profile documents'.

Since the aim is to support a wide set of use cases (clients, servers,
run-time, design-time, etc.), ALPS profiles do not describe the runtime
'behavior' of any single system. Instead ALPS profiles describe the problem
domain boundaries (e.g. the possible data elements and possible state
transitions). It is up to implementors to decide how they wish to use ALPS
profiles in order to create an actual instance of a service or client
application.

=== Servers and Clients
For server implementors, ALPS profiles establish the list of possible
identifiers for data values (+givenName+, +familyName+, etc.) and transitions
(+publish+, +create-user+, etc).  ALPS profiles also provide additional
description information for state transitions including whether the transition
is 'safe' or 'idempotent' and, in some cases, whether there are any possible
arguments that can be passed with each transition.

Client implementors can use the same ALPS document as a guide for what
to expect from a service which advertises support for an ALPS profile. For
example, if a service announces that it uses the ALPS profile for
microblogging, then any client application that was built to support the
microblogging profile SHOULD be able to recognize all the important data
elements and state transitions emitted by that service.

== Advertising ALPS Profiles for Siren Representations
Servers returning Siren responses can advertise the ALPS profiles they support
using the following methods:

Link Header::
  Responses can include the +Link+ header<<1,[1]>> with the +href+ value set to
  the URL of the ALPS profile document and the +rel+ value set to "profile."
  +++<br>+++
  +Link: <http://alps.io/profiles/microblogging>; rel="profile"+
Siren +link+ item::
  Siren representations can use an item in the +links+ array<<2,[2]>> with the
  +href+ value set to the URL of the ALPS profile document and the +rel+ value
  set to "profile."+++<br>+++
  +{ "rel": ["profile"], "href": "http://alps.io/profiles/microblogging" }+

[NOTE]
====
It is valid for a service to advertise support for more than one ALPS profile
for the same response. For example, a single response from a server might
include the following +LINK+ header:
----
LINK: <http://alps.io/profiles/finance>;rel="profile",
<http://alps.io/profiles/accounting>;rel="profile"
----

In the above case, the client application has been informed that the response
MAY contain data elements and state transitions from both the 'finance' and the
'accounting' ALPS profiles.
====

== Rules for Mapping ALPS to Siren
The following are the basic rules for rendering ALPS profile information into
valid Siren representations.

=== The ALPS +descriptor.id+ property
==== Server implementations
When mapping Siren representations to ALPS, the +descriptor.id+ value MUST be
unique for each ALPS document. It is RECOMMENDED to avoid using link
relation values as +descriptor.id+ values, as link relations may occur multiple
times within a single Siren representation.

==== Client implementations
When mapping ALPS to Siren representations, the +descriptor.id+ property MUST
be used in place of a +descriptor.name+ value when a +descriptor.name+ value is
not present. Otherwise, the +descriptor.id+ value SHOULD be ignored.

=== The ALPS +descriptor.name+ property
When the ALPS +descriptor.type+ value is 'semantic', the +descriptor.name+
value maps to a Siren 'property' name, a 'class' of a Siren entity or
sub-entity, or the 'name' of an action 'field'.

'TK: How does one distinguish between what is a property and what is a class?'

When the ALPS +descriptor.type+ value is 'safe', 'idempotent', or 'unsafe', the
+descriptor.name+ value maps to either a Siren 'action' name or an item in the
'rel' value array for a 'link' or 'sub-entity'. If no match is found, an
attempt should be made to map the +descriptor.name+ value to the 'title' value
of an 'action', 'link' or 'sub-entity'.

=== Mapping HTTP methods to ALPS +descriptor.type+ values
HTTP methods will be used for requesting state or executing transitions.
The ALPS +descriptor.type+ value of 'semantic' MUST not be used for this
purpose.

[NOTE]
===============
The HTTP mappings listed here are strictly advisory for ALPS document authors.
Siren clients MUST use the method declarations represented in the Siren
response for making requests.
===============

[grid="rows",format="csv"]
[options="header"]
|========================
HTTP method,+descriptor.type+ value
GET|HEAD|OPTIONS,safe
PUT|PATCH|DELETE,idempotent
POST,unsafe
|========================

== Mapping Examples
Below are some examples to use as guides when mapping between ALPS and Siren.

=== Search Example
This is a very simple ALPS profile that defines a single semantic descriptor
("text") and a single safe descriptor ("search"). This profile describes the
essence of the front end of any simple web-based search engine. Mapping this
ALPS profile to a Siren representation is rather straightforward.

==== ALPS Profile
----
<alps>
  <link rel="self" href="http://alps.io/profiles/search" />
  <descriptor id="search" type="safe" >
    <descriptor id="text" type="semantic" />
  </descriptor>
</alps>
----

==== Siren Representation
----
{
  "actions": [
    {
      "name": "search",
      "method": "GET",
      "href": "...",
      "fields": [
        { "name": "text", "type": "text" }
      ]
    }
  ],
  "links": [
    { "rel": ["self"], "href": "..." },
    { "rel": ["profile"], "href": "http://alps.io/profiles/search" }
  ]
}
----

=== User Account Example
This example shows an ALPS profile that describes both reading and writing
operations on a user account. It is also structured as a 'flat' ALPS document.
The data elements are listed separately from the transition elements. The
profile does not constrain any server implementations to specific parameters
for transitions; each server can select the data elements that best fit that
serverâ€™s use cases.

==== ALPS Profile
'TK: This example has mapping conflicts.'
----
<alps>
  <link rel="self" href="http://alps.io/profiles/useraccount" />

  <!-- data elements -->
  <descriptor id="user" type="semantic" />
  <descriptor id="accessCode" type="semantic" />
  <descriptor id="givenName" type="semantic" />
  <descriptor id="familyName" type="semantic" />
  <descriptor id="email" type="semantic" />
  <descriptor id="telephone" type="semantic" />

  <!-- transitions -->
  <descriptor id="list" type="safe" />
  <descriptor id="detail" type="safe" />
  <descriptor id="login-link" type="safe" name="login" />
  <descriptor id="login-form" type="unsafe" name="login" />
  <descriptor id="create-link" type="safe" name="create"/>
  <descriptor id="create-form" type="unsafe" "name="create/>
  <descriptor id="update-link" type="safe" name="update"/>
  <descriptor id="update-form" type="idempotent" name="update" />
  <descriptor id="remove-link" type="safe" name="remove" />
  <descriptor id="remove-form" type="idempotent" name="remove" />

</alps>
----

==== Siren Representation of a list of users

Includes a link to login and creating new accounts.

----
{
  "entities": [
    { "class": ["detail"], "rel": ["item"], "title": "Mary", "href": "..." },
    { "class": ["detail"], "rel": ["item"], "title": "Mark", "href": "..." },
    { "class": ["detail"], "rel": ["item"], "title": "Mandy", "href": "..." },
    { "class": ["detail"], "rel": ["item"], "title": "Manfred", "href": "..." },
    { "class": ["detail"], "rel": ["item"], "title": "Michelle", "href": "..." },
    { "class": ["detail"], "rel": ["item"], "title": "Michael", "href": "..." }
  ],
  "links": [
    { "rel": ["self"], "title": "list", "href": "..." },
    { "rel": ["http://example.org/rels/login"], "title": "login", "href": "..." },
    { "rel": ["create-form"], "title": "create-link", "href": "..." },
    { "rel": ["profile"], "href": "http://alps.io/profiles/useraccount" }
  ]
}
----

==== Siren Representation for creating a new user account
----
{
  "actions": [
    {
      "name": "create",
      "method": "POST",
      "href": "...",
      "fields": [
        { "name": "user", "type": "text" },
        { "name": "givenName", "type": "text" },
        { "name": "familyName", "type": "text" },
        { "name": "email", "type": "email" },
        { "name": "telephone", "type": "tel" }
      ]
    }
  ],
  "links": [
    { "rel": ["self"], "href": "..." },
    { "rel": ["profile"], "href": "http://alps.io/profiles/useraccount" }
  ]
}
----

==== Siren Representation for updating an existing user account
----
{
  "actions": [
    {
      "name": "update",
      "method": "PUT",
      "href": "...",
      "fields": [
        { "name": "etag", "type": "hidden", "value": "q1w2e3r4t5y6" },
        { "name": "user", "type": "text", "value": "kevinswiber" },
        { "name": "givenName", "type": "text" },
        { "name": "familyName", "type": "text" },
        { "name": "email", "type": "email" },
        { "name": "telephone", "type": "tel" }
      ]
    }
  ],
  "links": [
    { "rel": ["self"], "href": "..." },
    { "rel": ["profile"], "href": "http://alps.io/profiles/useraccount" }
  ]
}
----

==== Siren Representation for removing an existing user account
----
{
  "actions": [
    {
      "name": "remove",
      "method": "DELETE",
      "href": "...",
      "fields": [
        { "name": "etag", "type": "hidden", "value": "q1w2e3r4t5y6" }
      ]
    }
  ],
  "links": [
    { "rel": ["self"], "href": "..." },
    { "rel": ["profile"], "href": "http://alps.io/profiles/useraccount" }
  ]
}
----

== References

[[0]] 0. http://alps.io/spec

[[1]] 1. http://tools.ietf.org/search/rfc5988#section-5

[[2]] 2. https://github.com/kevinswiber/siren#links-1
